{"version":3,"file":"AssetSimulation-1892741d.js","sources":["../../src/Models/Classes/Simulations/Asset.ts","../../src/Models/Classes/Simulations/AssetSimulation.ts"],"sourcesContent":["import {\n    AssetRelationship,\n    AssetTwin,\n    ADTPatch,\n    IAssetProperty\n} from '../../Constants';\n\nexport class Asset {\n    public name: string;\n    public relationships: Array<AssetRelationship>;\n    public twins: Array<AssetTwin>;\n    public properties: Array<IAssetProperty<any>>;\n\n    public getDoubleValue = (minValue: number, maxValue: number) => {\n        return (currentValue: number) => {\n            const direction =\n                currentValue > maxValue\n                    ? -1\n                    : currentValue < minValue\n                    ? 1\n                    : Math.random() < 0.5\n                    ? -1\n                    : 1;\n            const step =\n                direction * (Math.random() * (maxValue - minValue) * 0.02);\n            return (currentValue += step);\n        };\n    };\n\n    public getIntegerValue = (minValue: number, maxValue: number) => {\n        return (currentValue: number) => {\n            const direction =\n                currentValue >= maxValue\n                    ? -1\n                    : currentValue <= minValue\n                    ? 1\n                    : Math.random() < 0.5\n                    ? -1\n                    : 1;\n            return (currentValue += direction);\n        };\n    };\n\n    public getBooleanValue = (isTrueThreshold: number) => {\n        return (_currentValue: boolean) => {\n            return Math.random() > isTrueThreshold;\n        };\n    };\n\n    public getStringValue = () => {\n        return (_currentValue: boolean) => {\n            const fourDigitNumber = Math.floor(Math.random() * 1000);\n            return `Box${fourDigitNumber}`;\n        };\n    };\n\n    private getAssetProperties() {\n        const assetProperties = [];\n        this.properties.forEach((property) => {\n            assetProperties.push(new AssetProperty(property));\n        });\n        return assetProperties;\n    }\n\n    constructor(name: string) {\n        this.properties = [];\n        this.relationships = [];\n        this.twins = [];\n        this.name = name;\n\n        switch (name) {\n            case 'RobotArm': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'FailedPickupsLastHr',\n                        currentValue: 1,\n                        getNextValue: this.getIntegerValue(0, 5),\n                        schema: 'integer'\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'PickupFailedAlert',\n                        currentValue: false,\n                        getNextValue: this.getBooleanValue(0.75),\n                        schema: 'boolean'\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'PickupFailedBoxID',\n                        currentValue: 'Box1',\n                        getNextValue: this.getStringValue(),\n                        schema: 'string'\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'HydraulicPressure',\n                        currentValue: 20,\n                        getNextValue: this.getDoubleValue(10, 100)\n                    }\n                ];\n                [1, 2, 3, 4, 5, 6].forEach((idx) => {\n                    this.twins.push({\n                        name: `Arm${idx}`,\n                        properties: this.getAssetProperties()\n                    });\n                });\n                break;\n            }\n            case 'DistributionCenter': {\n                this.relationships.push({\n                    name: 'contains',\n                    target: 'RobotArm'\n                });\n                this.twins.push({\n                    name: 'DistCtr',\n                    assetRelationships: [1, 2, 3, 4, 5, 6].map((idx) => {\n                        return {\n                            name: 'contains',\n                            target: `Arm${idx}`,\n                            targetModel: 'RobotArm'\n                        };\n                    }),\n                    properties: []\n                });\n                break;\n            }\n            case 'Car': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'Speed',\n                        currentValue: Math.floor(Math.random() * 20) + 40,\n                        getNextValue: this.getDoubleValue(0, 100)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'OutdoorTemperature',\n                        currentValue: Math.floor(Math.random()) + 40,\n                        getNextValue: this.getDoubleValue(20, 80)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'OilPressure',\n                        currentValue: Math.floor(Math.random()) + 30,\n                        getNextValue: this.getDoubleValue(28, 32)\n                    }\n                ];\n                this.twins.push({\n                    name: 'CarTwin',\n                    properties: this.getAssetProperties()\n                });\n                break;\n            }\n            case 'Windmill': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'OutdoorTemperature',\n                        currentValue: Math.floor(Math.random() * 20) + 40,\n                        getNextValue: this.getDoubleValue(0, 100)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'AtmosphericPressure',\n                        currentValue: Math.floor(Math.random()) + 30,\n                        getNextValue: this.getDoubleValue(29, 31)\n                    },\n\n                    {\n                        id: this.name,\n                        propertyName: 'WindVelocity',\n                        currentValue: Math.floor(Math.random() * 30),\n                        getNextValue: this.getDoubleValue(0, 70)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'BearingTemperature',\n                        currentValue: Math.floor(Math.random() * 30) + 90,\n                        getNextValue: this.getDoubleValue(90, 200)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'OilViscosity',\n                        currentValue: Math.floor(Math.random() * 5) + 10,\n                        getNextValue: this.getDoubleValue(10, 80)\n                    }\n                ];\n\n                this.twins.push({\n                    name: 'Windmill_1',\n                    properties: this.getAssetProperties()\n                });\n                break;\n            }\n            case 'HVACSystem': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'FanSpeed',\n                        currentValue: Math.floor(Math.random() * 20) + 40,\n                        getNextValue: this.getDoubleValue(0, 100)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'CoolerTemperature',\n                        currentValue: Math.floor(Math.random()) + 40,\n                        getNextValue: this.getDoubleValue(20, 60)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'HeaterTemperature',\n                        currentValue: Math.floor(Math.random()) + 50,\n                        getNextValue: this.getDoubleValue(40, 100)\n                    }\n                ];\n\n                this.twins.push({\n                    name: 'HVACSystem_1',\n                    properties: this.getAssetProperties()\n                });\n                break;\n            }\n            case 'PasteurizationMachine': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'InFlow',\n                        currentValue: Math.floor(Math.random() * 300) + 50,\n                        getNextValue: this.getDoubleValue(50, 600)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'OutFlow',\n                        currentValue: Math.floor(Math.random() * 300) + 50,\n                        getNextValue: this.getDoubleValue(50, 600)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'Temperature',\n                        currentValue: Math.floor(Math.random()) + 120,\n                        getNextValue: this.getDoubleValue(110, 250)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'PercentFull',\n                        currentValue: Math.floor(Math.random()),\n                        getNextValue: this.getDoubleValue(0, 1)\n                    }\n                ];\n\n                this.relationships.push({\n                    name: 'feeds',\n                    target: 'SaltMachine'\n                });\n\n                this.twins.push({\n                    name: 'PasteurizationMachine_A01',\n                    assetRelationships: [\n                        {\n                            name: 'feeds',\n                            target: 'SaltMachine_C0',\n                            targetModel: 'SaltMachine'\n                        }\n                    ],\n                    properties: this.getAssetProperties()\n                });\n                this.twins.push({\n                    name: 'PasteurizationMachine_A02',\n                    assetRelationships: [\n                        {\n                            name: 'feeds',\n                            target: 'SaltMachine_C0',\n                            targetModel: 'SaltMachine'\n                        }\n                    ],\n                    properties: this.getAssetProperties()\n                });\n                this.twins.push({\n                    name: 'PasteurizationMachine_A03',\n                    assetRelationships: [\n                        {\n                            name: 'feeds',\n                            target: 'SaltMachine_C1',\n                            targetModel: 'SaltMachine'\n                        }\n                    ],\n                    properties: this.getAssetProperties()\n                });\n                this.twins.push({\n                    name: 'PasteurizationMachine_A04',\n                    assetRelationships: [\n                        {\n                            name: 'feeds',\n                            target: 'SaltMachine_C2',\n                            targetModel: 'SaltMachine'\n                        }\n                    ],\n                    properties: this.getAssetProperties()\n                });\n                break;\n            }\n            case 'SaltMachine': {\n                this.properties = [\n                    {\n                        id: this.name,\n                        propertyName: 'InFlow',\n                        currentValue: Math.floor(Math.random() * 300) + 50,\n                        getNextValue: this.getDoubleValue(50, 600)\n                    },\n                    {\n                        id: this.name,\n                        propertyName: 'OutFlow',\n                        currentValue: Math.floor(Math.random() * 300) + 50,\n                        getNextValue: this.getDoubleValue(50, 600)\n                    }\n                ];\n\n                this.twins.push({\n                    name: 'SaltMachine_C0',\n                    properties: this.getAssetProperties()\n                });\n                this.twins.push({\n                    name: 'SaltMachine_C1',\n                    properties: this.getAssetProperties()\n                });\n                this.twins.push({\n                    name: 'SaltMachine_C2',\n                    properties: this.getAssetProperties()\n                });\n                break;\n            }\n            case 'MaintenancePersonnel': {\n                this.relationships.push({ name: 'maintains' });\n\n                this.twins.push({\n                    name: 'Xenia',\n                    assetRelationships: [\n                        {\n                            name: 'maintains',\n                            target: 'SaltMachine_C0',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'maintains',\n                            target: 'SaltMachine_C1',\n                            targetModel: 'SaltMachine'\n                        }\n                    ],\n                    properties: []\n                });\n\n                this.twins.push({\n                    name: 'Amy',\n                    assetRelationships: [\n                        {\n                            name: 'maintains',\n                            target: 'SaltMachine_C1',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'maintains',\n                            target: 'PasteurizationMachine_A01',\n                            targetModel: 'PasteurizationMachine'\n                        }\n                    ],\n                    properties: []\n                });\n\n                this.twins.push({\n                    name: 'John',\n                    assetRelationships: [\n                        {\n                            name: 'maintains',\n                            target: 'PasteurizationMachine_A02',\n                            targetModel: 'PasteurizationMachine'\n                        },\n                        {\n                            name: 'maintains',\n                            target: 'PasteurizationMachine_A03',\n                            targetModel: 'PasteurizationMachine'\n                        }\n                    ],\n                    properties: []\n                });\n\n                this.twins.push({\n                    name: 'Phillip',\n                    assetRelationships: [\n                        {\n                            name: 'maintains',\n                            target: 'SaltMachine_C2',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'maintains',\n                            target: 'PasteurizationMachine_A04',\n                            targetModel: 'PasteurizationMachine'\n                        }\n                    ],\n                    properties: []\n                });\n\n                break;\n            }\n            case 'Factory': {\n                this.relationships.push({ name: 'contains' });\n                this.relationships.push({\n                    name: 'employs',\n                    target: 'MaintenancePersonnel'\n                });\n\n                this.twins.push({\n                    name: 'OsloFactory',\n                    assetRelationships: [\n                        {\n                            name: 'contains',\n                            target: 'SaltMachine_C0',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'contains',\n                            target: 'SaltMachine_C1',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'contains',\n                            target: 'PasteurizationMachine_A01',\n                            targetModel: 'PasteurizationMachine'\n                        },\n                        {\n                            name: 'contains',\n                            target: 'PasteurizationMachine_A02',\n                            targetModel: 'PasteurizationMachine'\n                        },\n                        {\n                            name: 'contains',\n                            target: 'PasteurizationMachine_A03',\n                            targetModel: 'PasteurizationMachine'\n                        },\n                        {\n                            name: 'employs',\n                            target: 'Amy',\n                            targetModel: 'MaintenancePersonnel'\n                        },\n                        {\n                            name: 'employs',\n                            target: 'John',\n                            targetModel: 'MaintenancePersonnel'\n                        },\n                        {\n                            name: 'employs',\n                            target: 'Xenia',\n                            targetModel: 'MaintenancePersonnel'\n                        }\n                    ],\n                    properties: []\n                });\n\n                this.twins.push({\n                    name: 'StockholmFactory',\n                    assetRelationships: [\n                        {\n                            name: 'contains',\n                            target: 'SaltMachine_C2',\n                            targetModel: 'SaltMachine'\n                        },\n                        {\n                            name: 'contains',\n                            target: 'PasteurizationMachine_A04',\n                            targetModel: 'PasteurizationMachine'\n                        },\n                        {\n                            name: 'employs',\n                            target: 'Phillip',\n                            targetModel: 'MaintenancePersonnel'\n                        }\n                    ],\n                    properties: []\n                });\n\n                break;\n            }\n            case 'Country': {\n                this.relationships.push({\n                    name: 'contains',\n                    target: 'Factory'\n                });\n                this.twins.push({\n                    name: 'Norway',\n                    assetRelationships: [\n                        {\n                            name: 'contains',\n                            target: 'OsloFactory',\n                            targetModel: 'Factory'\n                        }\n                    ],\n                    properties: []\n                });\n                this.twins.push({\n                    name: 'Sweden',\n                    assetRelationships: [\n                        {\n                            name: 'contains',\n                            target: 'StockholmFactory',\n                            targetModel: 'Factory'\n                        }\n                    ],\n                    properties: []\n                });\n                break;\n            }\n            default:\n                break;\n        }\n    }\n}\n\nexport class AssetProperty<T> {\n    public id: string;\n    public propertyName: string;\n    private currentValue: T;\n    private getNextValue: (currentValue: T) => T;\n    public schema: string;\n\n    constructor({\n        id,\n        propertyName,\n        currentValue,\n        getNextValue,\n        schema = 'double'\n    }: IAssetProperty<T>) {\n        this.id = id;\n        this.propertyName = propertyName;\n        this.currentValue = currentValue;\n        this.getNextValue = getNextValue;\n        this.schema = schema;\n    }\n\n    tick() {\n        this.currentValue = this.getNextValue(this.currentValue);\n        const event: ADTPatch = {\n            op: 'replace',\n            path: `/${this.propertyName}`,\n            value: this.currentValue\n        };\n        return event;\n    }\n}\n","import {\n    DTModelContent,\n    DTModel,\n    DTwin,\n    DTwinRelationship,\n    IAdtPusherSimulation,\n    AdtPusherSimulationType\n} from '../../Constants';\nimport {\n    AssetRelationship,\n    AssetTwin,\n    ADTPatch,\n    DTwinUpdateEvent\n} from '../../Constants/Interfaces';\nimport { downloadJSON } from '../../Services/Utils';\nimport { Asset } from './Asset';\n\nconst modelTwinsRelationshipsData = {\n    versionNumber: 1\n};\n\nexport default class AssetSimulation implements IAdtPusherSimulation {\n    private assets: Array<Asset>;\n    public seedTimeMillis: number;\n    private intervalMillis: number;\n\n    constructor(\n        seedTimeMillis: number,\n        intervalMillis: number,\n        simulationType: AdtPusherSimulationType\n    ) {\n        this.assets = [];\n        this.seedTimeMillis = seedTimeMillis;\n        this.intervalMillis = intervalMillis;\n        if (simulationType === AdtPusherSimulationType.DairyProduction) {\n            this.assets.push(new Asset('PasteurizationMachine'));\n            this.assets.push(new Asset('SaltMachine'));\n            this.assets.push(new Asset('MaintenancePersonnel'));\n            this.assets.push(new Asset('Factory'));\n            this.assets.push(new Asset('Country'));\n        } else if (simulationType === AdtPusherSimulationType.RobotArms) {\n            this.assets.push(new Asset('RobotArm'));\n            this.assets.push(new Asset('DistributionCenter'));\n        }\n    }\n\n    generateTwinId(name: string) {\n        return `${name}Twin`;\n    }\n\n    generateModelId(name: string): string {\n        return `dtmi:assetGen:${name};${modelTwinsRelationshipsData.versionNumber}`;\n    }\n\n    tick() {\n        this.seedTimeMillis += this.intervalMillis;\n        const events: any = [];\n        this.assets.forEach(function (asset) {\n            asset.twins.forEach(function (twin: AssetTwin) {\n                const updateTwin: DTwinUpdateEvent = {\n                    dtId: twin.name,\n                    patchJSON: twin.properties.map(function (d) {\n                        return d.tick() as ADTPatch;\n                    })\n                };\n                events.push(updateTwin);\n            });\n        });\n        return events;\n    }\n\n    generateDTModels(download = false) {\n        const dtdlModels = this.assets.map((asset) => {\n            const propertyContents: Array<DTModelContent> = asset.properties.map(\n                (property) => ({\n                    '@type': 'Property',\n                    name: property.propertyName,\n                    schema: property.schema || 'double'\n                })\n            );\n            const relationshipContents: Array<any> = asset.relationships.map(\n                (assetRelationship: AssetRelationship) => {\n                    const relationship: any = {\n                        '@type': 'Relationship',\n                        name: assetRelationship.name,\n                        properties: [\n                            {\n                                '@type': 'Property',\n                                name: 'targetModel',\n                                schema: 'string'\n                            }\n                        ]\n                    };\n                    if (assetRelationship.target) {\n                        relationship.target = this.generateModelId(\n                            assetRelationship.target\n                        );\n                    }\n                    return relationship;\n                }\n            );\n\n            const model: DTModel = {\n                '@id': this.generateModelId(asset.name),\n                '@type': 'Interface',\n                '@context': 'dtmi:dtdl:context;2',\n                displayName: asset.name,\n                contents: [...propertyContents, ...relationshipContents]\n            };\n            return model;\n        });\n        if (download) {\n            downloadJSON(JSON.stringify(dtdlModels), 'DT_Models.json');\n        }\n        return dtdlModels;\n    }\n\n    generateDTwins(download = false) {\n        const twins: Array<DTwin> = [];\n        this.assets.forEach((asset: Asset) => {\n            asset.twins.forEach((assetTwin: AssetTwin) => {\n                const twin: DTwin = {\n                    $dtId: assetTwin.name,\n                    $metadata: {\n                        $model: `dtmi:assetGen:${asset.name};${modelTwinsRelationshipsData.versionNumber}`\n                    }\n                };\n                asset.properties.forEach((property) => {\n                    twin[`${property.propertyName}`] = property.currentValue;\n                });\n                twins.push(twin);\n            });\n        });\n        if (download) {\n            downloadJSON(JSON.stringify(twins), 'DT_Twins.json');\n        }\n        return twins;\n    }\n\n    generateTwinRelationships() {\n        const relationships: Array<DTwinRelationship> = [];\n        this.assets.forEach((asset: Asset) => {\n            asset?.twins.forEach((twin: AssetTwin) => {\n                twin.assetRelationships?.forEach(\n                    (\n                        relationship: AssetRelationship,\n                        relationshipIndex: number\n                    ) => {\n                        relationships.push({\n                            $relId: `${twin.name}_${relationship.name}_Relationship${relationshipIndex}`,\n                            $dtId: twin.name,\n                            $name: relationship.name,\n                            $targetId: relationship.target\n                                ? relationship.target\n                                : '',\n                            targetModel: relationship.targetModel\n                                ? relationship.targetModel\n                                : ''\n                        });\n                    }\n                );\n            });\n        });\n        return relationships;\n    }\n}\n"],"names":[],"mappings":"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"}