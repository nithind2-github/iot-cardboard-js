{"version":3,"file":"StableGuidRngProvider-c9a58eb4.js","sources":["../../src/Models/Constants/ActionTypes.ts","../../src/Models/Hooks/useCancellablePromise.ts","../../src/Models/Hooks/useLongPoll.ts","../../src/Models/Hooks/useAdapter.ts","../../src/Models/Context/StableGuidRngProvider.tsx"],"sourcesContent":["export const SET_CHART_PROPERTIES = 'SET_CHART_PROPERTIES';\nexport const SET_SELECTED_PROPERTIES = 'SET_SELECTED_PROPERTIES';\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\nexport const SET_ADAPTER_RESULT = 'SET_ADAPTER_RESULT';\nexport const SET_IS_LONG_POLLING = 'SET_IS_LONG_POLLING';\nexport const SET_IS_INITIAL_CALL = 'SET_IS_INITIAL_CALL';\nexport const SET_ADT_HIERARCHY_NODES = 'SET_ADT_HIERARCHY_NODES';\nexport const SET_ADT_HIERARCHY_NODE_PROPERTIES =\n    'SET_ADT_HIERARCHY_NODE_PROPERTIES';\nexport const SET_ADT_HIERARCHY_SELECTED_TWIN_ID =\n    'SET_ADT_HIERARCHY_SELECTED_TWIN_ID';\nexport const SET_ADT_HIERARCHY_SEARCH = 'SET_ADT_HIERARCHY_SEARCH';\nexport const SET_TWIN_LOOKUP_STATUS = 'SET_TWIN_LOOKUP_STATUS';\nexport const SET_ADT_SCENE_BUILDER_ELEMENTS = 'SET_ADT_SCENE_BUILDER_ELEMENTS';\nexport const SET_ADT_SCENE_BUILDER_BEHAVIORS =\n    'SET_ADT_SCENE_BUILDER_BEHAVIORS';\nexport const SET_ADT_SCENE_BUILDER_SELECTED_ELEMENT =\n    'SET_ADT_SCENE_BUILDER_SELECTED_ELEMENT';\nexport const SET_ADT_SCENE_ELEMENT_SELECTED_OBJECT_IDS =\n    'SET_ADT_SCENE_ELEMENT_SELECTED_OBJECT_IDS';\nexport const SET_ADT_SCENE_BUILDER_MODE = 'SET_ADT_SCENE_BUILDER_MODE';\n\nexport const SET_OAT_PROPERTY_EDITOR_CURRENT_PROPERTY_INDEX =\n    'SET_OAT_PROPERTY_EDITOR_CURRENT_PROPERTY_INDEX';\nexport const SET_OAT_PROPERTY_EDITOR_CURRENT_NESTED_PROPERTY_INDEX =\n    'SET_OAT_PROPERTY_EDITOR_CURRENT_NESTED_PROPERTY_INDEX';\nexport const SET_OAT_PROPERTY_EDITOR_DRAGGING_TEMPLATE =\n    'SET_OAT_PROPERTY_EDITOR_DRAGGING_TEMPLATE';\nexport const SET_OAT_PROPERTY_EDITOR_DRAGGING_PROPERTY =\n    'SET_OAT_PROPERTY_EDITOR_DRAGGING_PROPERTY';\nexport const SET_OAT_PROPERTY_MODAL_OPEN = 'SET_OAT_PROPERTY_MODAL_OPEN';\nexport const SET_OAT_PROPERTY_MODAL_BODY = 'SET_OAT_PROPERTY_MODAL_BODY';\n","import { useEffect, useRef } from 'react';\nimport { CancelledPromiseError } from '../Classes/Errors';\nimport { ICancellablePromise } from '../Constants/Interfaces';\nimport { CancellablePromise } from '../Constants/Types';\n\n/** Wraps promise with logic that allows for promise cancellation via cancel() method */\nexport function makeCancellable<T>(\n    promise: Promise<T>,\n    promisesRef?: React.MutableRefObject<any>\n): CancellablePromise<T> {\n    let isCancelled = false;\n    let returnValue: CancellablePromise<T> = {\n        promise: null,\n        cancel: () => null\n    };\n\n    const wrappedPromise = new Promise<T>((resolve, reject) => {\n        async function executePromise() {\n            try {\n                const val = await promise;\n                if (isCancelled) {\n                    reject(new CancelledPromiseError());\n                } else {\n                    resolve(val);\n                }\n            } catch (error) {\n                if (isCancelled) {\n                    reject(new CancelledPromiseError());\n                } else {\n                    reject(error);\n                }\n            }\n            // Remove promise from promisesRef.current list once resolved/rejected\n            if (\n                promisesRef &&\n                promisesRef.current.indexOf(returnValue) !== -1\n            ) {\n                promisesRef.current = promisesRef.current.filter(\n                    (promise) => promise !== returnValue\n                );\n            }\n        }\n        executePromise();\n    });\n\n    returnValue = {\n        promise: wrappedPromise,\n        cancel() {\n            isCancelled = true;\n        }\n    };\n\n    return returnValue;\n}\n\n/**\n * Exposes two functions: 'cancellablePromise' to wrap promises in cancellation code which auto cancels on unmount,\n * and 'cancel' function to manually cancel wrapped promises.  This hooks was adapted from the following repo:\n * https://github.com/rajeshnaroth/react-cancelable-promise-hook/blob/master/index.js\n */\nconst useCancellablePromise = () => {\n    const promises = useRef(null);\n\n    /** Cancel all active promises constructed by this hook's consumer */\n    function cancel() {\n        promises.current.forEach((p) => p.cancel());\n        promises.current = [];\n    }\n\n    // On unmount, cancel promises\n    useEffect(() => {\n        promises.current = promises.current || [];\n        return cancel;\n    }, []);\n\n    /** Function to construct cancellable promise if it is not already */\n    function cancellablePromise<T>(p: Promise<T> | ICancellablePromise<T>) {\n        const isICancellablePromise =\n            p['cancel'] && typeof p['cancel'] === 'function';\n        const cPromise = !isICancellablePromise\n            ? makeCancellable(p, promises)\n            : (p as ICancellablePromise<T>);\n        promises.current.push(cPromise);\n        return !isICancellablePromise\n            ? (cPromise as CancellablePromise<T>).promise\n            : (p as ICancellablePromise<T>);\n    }\n\n    return { cancellablePromise, cancel };\n};\n\nexport default useCancellablePromise;\n","import { useEffect, useRef, useState } from 'react';\nimport { UseLongPollParams } from '../Constants/Types';\n\nexport const defaultPollingIntervalMillis = 1000;\nexport const defaultPulseTimeoutMillis = 400;\n\n/**\n * Hook to wrap vanilla setInterval with smarter, unmount-safe logic.\n * Adapted from Dan Abramov's declarative setInterval blog post\n * https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n */\nconst useLongPoll = ({\n    callback,\n    pollingIntervalMillis = defaultPollingIntervalMillis,\n    pulseTimeoutMillis = defaultPulseTimeoutMillis\n}: UseLongPollParams) => {\n    const [pulse, setPulse] = useState(false);\n    const savedCallback = useRef(null);\n    const mountedRef = useRef(true);\n\n    // Remember the latest callback\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval\n    useEffect(() => {\n        let timeoutId, intervalId;\n\n        async function tick() {\n            await savedCallback.current();\n            mountedRef.current && setPulse(true);\n            timeoutId = setTimeout(\n                () => mountedRef.current && setPulse(false),\n                pulseTimeoutMillis\n            );\n        }\n\n        if (pollingIntervalMillis !== null) {\n            tick();\n            intervalId = setInterval(tick, pollingIntervalMillis);\n            return () => {\n                mountedRef.current = false;\n                clearInterval(intervalId);\n                clearTimeout(timeoutId);\n            };\n        }\n    }, [pollingIntervalMillis]);\n\n    return {\n        /**\n         * Boolean pulse variable. Toggled to true for pulseTimeoutMillis\n         * after callback completion, before returning to false.  Can be used\n         * for visual indication of updated data in UI.\n         */\n        pulse\n    };\n};\n\nexport default useLongPoll;\n","import produce from 'immer';\nimport { useEffect, useMemo, useReducer, useRef } from 'react';\nimport AdapterResult from '../Classes/AdapterResult';\nimport { CancelledPromiseError } from '../Classes/Errors';\nimport {\n    SET_ADAPTER_RESULT,\n    SET_IS_LOADING,\n    SET_IS_LONG_POLLING,\n    SET_IS_INITIAL_CALL\n} from '../Constants/ActionTypes';\nimport { IAction, IAdapterData, IUseAdapter } from '../Constants/Interfaces';\nimport {\n    AdapterReturnType,\n    AdapterState,\n    AdapterMethodParams\n} from '../Constants/Types';\nimport useCancellablePromise from './useCancellablePromise';\nimport useLongPoll from './useLongPoll';\n\n// Sets up reducer with 'curried producer' - https://immerjs.github.io/immer/docs/curried-produce\n// Draft state can be directly modified.  Draft does not need to be explicitly returned.\nconst cardStateReducer = produce(\n    <T extends IAdapterData>(draft: AdapterState<T>, action: IAction) => {\n        const payload = action.payload;\n        switch (action.type) {\n            case SET_IS_LOADING:\n                draft.isLoading = payload;\n                return;\n            case SET_ADAPTER_RESULT:\n                draft.adapterResult = payload;\n                return;\n            case SET_IS_LONG_POLLING:\n                draft.isLongPolling = payload;\n                return;\n            case SET_IS_INITIAL_CALL:\n                draft.isInitialCall = payload;\n                return;\n            default:\n                return;\n        }\n    }\n);\n\ninterface Params<T extends IAdapterData> {\n    /** Callback which triggers adapter data fetch */\n    adapterMethod: (params?: AdapterMethodParams) => AdapterReturnType<T>;\n\n    /** Not to execute the adapter method when we use the useAdapter hook in first render */\n    isAdapterCalledOnMount?: boolean;\n\n    /** Array of dependencies that, when changed, should cancel the data fetch, nullify the data, and trigger a refetch.   */\n    refetchDependencies: any[];\n\n    /** Whether or not the adapterMethod is long polling */\n    isLongPolling?: boolean;\n\n    /** Long polling interval */\n    pollingIntervalMillis?: number;\n\n    /** Interval at which 'pulse' state is toggled for UI. */\n    pulseTimeoutMillis?: number;\n}\n\n/** Wraps adapter data fetching, loading, long polling, and promise cancelling logic */\nconst useAdapter = <T extends IAdapterData>({\n    adapterMethod,\n    refetchDependencies,\n    isLongPolling = false,\n    pollingIntervalMillis,\n    pulseTimeoutMillis,\n    isAdapterCalledOnMount = true\n}: Params<T>): IUseAdapter<T> => {\n    const defaultCardState: AdapterState<T> = useMemo(\n        () => ({\n            adapterResult: new AdapterResult<T>({\n                result: null,\n                errorInfo: null\n            }),\n            isLoading: isAdapterCalledOnMount,\n            isLongPolling,\n            isInitialCall: true\n        }),\n        [isLongPolling]\n    );\n\n    const mountedRef = useRef(null);\n\n    const [state, dispatch] = useReducer(cardStateReducer, defaultCardState);\n    const { cancellablePromise, cancel } = useCancellablePromise();\n\n    const setIsLoading = (isLoading: boolean) => {\n        dispatch({ type: SET_IS_LOADING, payload: isLoading });\n    };\n\n    const setAdapterResult = (adapterResult: AdapterResult<T>) => {\n        if (!adapterResult) {\n            adapterResult = new AdapterResult<T>({\n                result: null,\n                errorInfo: null\n            });\n        }\n        dispatch({ type: SET_ADAPTER_RESULT, payload: adapterResult });\n    };\n\n    const callAdapter = async (params?: AdapterMethodParams) => {\n        setIsLoading(true);\n        try {\n            const adapterResult = await cancellablePromise(\n                adapterMethod(params)\n            );\n            if (mountedRef.current) {\n                setAdapterResult(adapterResult);\n                setIsLoading(false);\n            }\n        } catch (err) {\n            if (!(err instanceof CancelledPromiseError)) {\n                console.error('Unexpected promise error', err); // log unexpected errors\n                if (mountedRef.current) {\n                    setIsLoading(false); // Toggle off loading state if component is still mounted\n                }\n            }\n        }\n    };\n\n    const cancelAdapter = (shouldPreserveResult?: boolean) => {\n        cancel(); // Cancel outstanding promises\n        if (mountedRef.current) {\n            if (!shouldPreserveResult) {\n                setAdapterResult(null);\n            }\n            setIsLoading(false);\n        }\n    };\n\n    const setIsLongPolling = (isLongPolling: boolean) => {\n        dispatch({\n            type: SET_IS_LONG_POLLING,\n            payload: isLongPolling\n        });\n    };\n\n    const longPoll = useLongPoll({\n        callback: callAdapter,\n        pollingIntervalMillis: !state.isLongPolling\n            ? null\n            : pollingIntervalMillis,\n        ...(pulseTimeoutMillis && { pulseTimeoutMillis })\n    });\n\n    useEffect(() => {\n        if (isAdapterCalledOnMount) {\n            if (state.isInitialCall) {\n                callAdapter();\n                dispatch({\n                    type: SET_IS_INITIAL_CALL,\n                    payload: false\n                });\n            } else {\n                cancelAdapter();\n                callAdapter();\n            }\n        }\n    }, [...refetchDependencies]);\n\n    useEffect(() => {\n        mountedRef.current = true; // Use ref to indicate mounted state\n        return () => {\n            mountedRef.current = false;\n            cancelAdapter();\n        };\n    }, []);\n\n    return {\n        isLoading: state.isLoading,\n        adapterResult: state.adapterResult as AdapterResult<T>,\n        callAdapter,\n        cancelAdapter,\n        setIsLongPolling,\n        isLongPolling: state.isLongPolling,\n        pulse: longPoll.pulse\n    };\n};\n\nexport default useAdapter;\n","import React, { useContext, useRef } from 'react';\nimport seedRandom from 'seedrandom';\n\nexport const StableGuidRng = React.createContext<() => number>(null);\nexport const useStableGuidRng = () => useContext(StableGuidRng);\n\ntype Props = {\n    children: React.ReactNode;\n    seed: string;\n};\n\nexport const StableGuidRngProvider = ({ children, seed }: Props) => {\n    const seededRandomNumGen = useRef(seedRandom(seed));\n    return (\n        <StableGuidRng.Provider value={seededRandomNumGen.current}>\n            {children}\n        </StableGuidRng.Provider>\n    );\n};\n"],"names":["produce","React"],"mappings":"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"}