{"version":3,"file":"HierarchyNode-c4d8d9f5.js","sources":["../../src/Models/Classes/AdapterDataClasses/ADTAdapterData.ts","../../src/Models/Classes/AdapterDataClasses/ADTModelData.ts","../../src/Models/Classes/AdapterDataClasses/ADTRelationshipsData.ts","../../src/Models/Classes/AdapterDataClasses/ADTTwinData.ts","../../src/Models/Classes/AdapterDataClasses/KeyValuePairAdapterData.ts","../../src/Models/Classes/AdapterMethodSandbox.ts","../../src/Models/Classes/HierarchyNode.ts"],"sourcesContent":["import { IAdapterData } from '../../Constants/Interfaces';\nimport { ADTModelsApiData, ADTTwinsApiData } from '../../Constants/Types';\nimport { DtdlInterface } from '../../Constants/dtdlInterfaces';\n\nexport class ADTAdapterModelsData implements IAdapterData {\n    data: ADTModelsApiData;\n\n    constructor(data: ADTModelsApiData) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return (\n            this.data === undefined ||\n            this.data === null ||\n            this.data.value?.length === 0\n        );\n    }\n}\n\nexport class ADTAdapterTwinsData implements IAdapterData {\n    data: ADTTwinsApiData;\n\n    constructor(data: ADTTwinsApiData) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return (\n            this.data === undefined ||\n            this.data === null ||\n            this.data.value.length === 0\n        );\n    }\n}\n\nexport class ADTAdapterSearchByQueryData implements IAdapterData {\n    data: ADTTwinsApiData;\n\n    constructor(data: ADTTwinsApiData) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return (\n            this.data === undefined ||\n            this.data === null ||\n            this.data.value.length === 0\n        );\n    }\n}\n\ninterface IADTAdapterExpandedModelData {\n    rootModel: DtdlInterface;\n    expandedModels: DtdlInterface[];\n}\n\nexport class ADTAdapterExpandedModelData implements IAdapterData {\n    data: IADTAdapterExpandedModelData;\n\n    constructor(data: IADTAdapterExpandedModelData) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data === undefined;\n    }\n}\n\nexport class ADTAdapterPatchData implements IAdapterData {\n    data: any;\n\n    constructor(data: any) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data === undefined;\n    }\n}\n","import { ModelDict } from 'azure-iot-dtdl-parser';\nimport { DtdlInterface } from '../../Constants';\nimport { IAdapterData, IADTModel } from '../../Constants/Interfaces';\n\nclass ADTModelData implements IAdapterData {\n    data: IADTModel;\n\n    constructor(data: IADTModel) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data === undefined;\n    }\n}\n\nexport class ADTAllModelsData implements IAdapterData {\n    data: {\n        rawModels: DtdlInterface[];\n        parsedModels: ModelDict;\n    };\n\n    constructor(data: { rawModels: DtdlInterface[]; parsedModels: ModelDict }) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return !this.data?.parsedModels || !this.data?.rawModels;\n    }\n}\n\nexport class ADTTwinToModelMappingData implements IAdapterData {\n    data: {\n        twinId: string;\n        modelId: string;\n    };\n\n    constructor(data: { twinId: string; modelId: string }) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return !this.data?.twinId || !this.data?.modelId;\n    }\n}\n\nexport default ADTModelData;\n","import { IAdapterData, IADTRelationship } from '../../Constants/Interfaces';\nimport { ADTRelationship } from '../../Constants/Types';\n\nclass ADTRelationshipsData implements IAdapterData {\n    data: ADTRelationship[];\n\n    constructor(data: ADTRelationship[]) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data.length === 0;\n    }\n}\n\nclass ADTRelationshipData implements IAdapterData {\n    data: IADTRelationship;\n\n    constructor(data: IADTRelationship) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data.length === 0;\n    }\n}\n\nexport { ADTRelationshipsData, ADTRelationshipData };\n","import { IAdapterData, IADTTwin } from '../../Constants/Interfaces';\n\nclass ADTTwinData implements IAdapterData {\n    data: IADTTwin;\n\n    constructor(data: IADTTwin) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return this.data === null || this.data === undefined;\n    }\n}\n\nexport default ADTTwinData;\n","import { IAdapterData } from '../../Constants/Interfaces';\nimport { KeyValuePairData } from '../../Constants/Types';\n\nclass KeyValuePairAdapterData implements IAdapterData {\n    data: Array<KeyValuePairData>;\n\n    constructor(data: Array<KeyValuePairData>) {\n        this.data = data;\n    }\n\n    hasNoData() {\n        return (\n            this.data === null ||\n            this.data.length === 0 ||\n            !this.data.reduce((acc, curr) => {\n                return acc || curr.value;\n            }, false)\n        );\n    }\n}\n\nexport default KeyValuePairAdapterData;\n","import axios from 'axios';\nimport {\n    IComponentError,\n    ComponentErrorType,\n    AxiosParams,\n    IAdapterData,\n    IAuthService,\n    ICancellablePromise\n} from '../Constants';\nimport AdapterResult from './AdapterResult';\nimport { ComponentError } from './Errors';\n\n/** Utility class which creates sandbox environment for adapter data fetching.\n *\n * • Manages errors and catasrophicErrors.\n *\n * • Safely fetches auth token and passes token to data fetching callback\n *\n * • Catches, classifies, and aggregates errors\n */\nclass AdapterMethodSandbox {\n    private errors: IComponentError[];\n    private catasrophicError: IComponentError;\n    private authService: IAuthService;\n\n    constructor(authservice?: IAuthService) {\n        this.errors = [];\n        this.catasrophicError = null;\n        this.authService = authservice;\n    }\n\n    /**\n     *  Pushes new ComponentError onto errors list.  If error is marked as catastrophic,\n     *  execution will halt with catastrophic error attached to result\n     */\n    pushError({ rawError, message, type, isCatastrophic }: IComponentError) {\n        const error = new ComponentError({\n            message,\n            type,\n            isCatastrophic,\n            rawError\n        });\n\n        this.errors.push(error);\n\n        if (error.isCatastrophic) {\n            this.catasrophicError = error;\n            throw error;\n        }\n    }\n\n    /**\n     * Fetch token wrapped in try / catch block.  If token fetch fails, will attach\n     * catastrophic TokenRetrievalFailed error, halting further execution.\n     */\n    private async safelyFetchToken(\n        tokenFor?: 'azureManagement' | 'adx' | 'storage' | 'powerBI'\n    ) {\n        // If adapterMethodSandbox not constructed with authService, skip token fetching\n        if (!this.authService) {\n            return null;\n        }\n\n        let token = '';\n        try {\n            token = await this.authService.getToken(tokenFor);\n            if (!token && token !== '') {\n                throw new Error('Token undefined');\n            }\n        } catch (err) {\n            this.pushError({\n                isCatastrophic: true,\n                type: ComponentErrorType.TokenRetrievalFailed,\n                rawError: err\n            });\n        }\n        return token;\n    }\n\n    /**\n     * Wraps adapter data-fetching logic in sandbox which safely fetches an auth token and handles errors consistently.\n     *\n     * • Any operation that may throw in the callback passed to this method should be wrapped in additional try/catch\n     * blocks which push specific error info to the sandbox.\n     *\n     * • Errors marked isCatastrophic will halt adapter execution.\n     *\n     * • Uncaught errors will be treated as catastrophic errors with unknown types and will also halt adapter execution.\n     *  */\n    async safelyFetchData<T extends IAdapterData>(\n        fetchDataWithToken: (token?: string) => Promise<T>,\n        tokenFor?: 'azureManagement' | 'adx' | 'storage' | 'powerBI'\n    ) {\n        try {\n            // Fetch token\n            const token = await this.safelyFetchToken(tokenFor);\n            // Execute data fetching callback\n            const data = await fetchDataWithToken(token);\n\n            return new AdapterResult<T>({\n                errorInfo: {\n                    errors: this.errors,\n                    catastrophicError: this.catasrophicError\n                },\n                result: data\n            });\n        } catch (err) {\n            // Uncaught errors are bubbled up and caught here.\n            if (!(err instanceof ComponentError)) {\n                // Unknown error, construct new catastrophicError error\n                this.catasrophicError = new ComponentError({\n                    isCatastrophic: true,\n                    rawError: err,\n                    type: ComponentErrorType.UnknownError\n                });\n\n                this.errors.unshift(this.catasrophicError);\n            } else if (!this.catasrophicError) {\n                // Uncaught ComponentError thrown explicitly (not pushed to sandbox).  Attach to catastrophicError.\n                this.catasrophicError = err;\n                this.errors.unshift(this.catasrophicError);\n            }\n            // Attach errorInfo, nullify result, and return AdapterResult.\n            return new AdapterResult<T>({\n                errorInfo: {\n                    errors: this.errors,\n                    catastrophicError: this.catasrophicError\n                },\n                result: null\n            });\n        }\n    }\n\n    safelyFetchDataCancellableAxiosPromise(\n        returnDataClass: { new (data: any) },\n        axiosParams: AxiosParams,\n        dataTransformFunc?: (data) => any,\n        tokenFor?: 'azureManagement' | 'adx' | 'storage' | 'powerBI'\n    ): ICancellablePromise<AdapterResult<any>> {\n        const { headers, ...restOfParams } = axiosParams;\n        const cancelTokenSource = axios.CancelToken.source();\n\n        const cancellablePromise = this.safelyFetchData(async (token) => {\n            let axiosData;\n            try {\n                axiosData = await axios({\n                    ...restOfParams,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        authorization: 'Bearer ' + token,\n                        ...headers\n                    },\n                    cancelToken: cancelTokenSource.token\n                });\n            } catch (err) {\n                if (axios.isCancel(err)) {\n                    this.pushError({\n                        type: ComponentErrorType.DataFetchFailed,\n                        isCatastrophic: false,\n                        rawError: err\n                    });\n                } else {\n                    this.pushError({\n                        type: ComponentErrorType.DataFetchFailed,\n                        isCatastrophic: true,\n                        rawError: err\n                    });\n                }\n            }\n            const result = axiosData?.data;\n            return new returnDataClass(\n                dataTransformFunc ? dataTransformFunc(result) : result\n            );\n        }, tokenFor) as ICancellablePromise<AdapterResult<any>>;\n        cancellablePromise.cancel = cancelTokenSource.cancel;\n        return cancellablePromise;\n    }\n}\n\nexport default AdapterMethodSandbox;\n","import { HierarchyNodeType } from '../Constants';\nimport { IADTModel, IADTTwin, IHierarchyNode } from '../Constants/Interfaces';\n\nexport class HierarchyNode implements IHierarchyNode {\n    name: string;\n    id: string;\n    parentNode?: IHierarchyNode;\n    nodeData: any;\n    nodeType: HierarchyNodeType;\n    children?: Record<string, IHierarchyNode>;\n    childrenContinuationToken?: string;\n    onNodeClick?: (node?: IHierarchyNode) => void;\n    isCollapsed?: boolean;\n    isSelected?: boolean;\n    isLoading?: boolean;\n\n    public static createNodesFromADTModels = (\n        models: Array<IADTModel>,\n        nodeType: HierarchyNodeType = HierarchyNodeType.Parent,\n        newlyAddedModelIds?: Array<string>\n    ): Record<string, IHierarchyNode> | Record<string, never> => {\n        return models\n            ? models\n                  .sort((a, b) =>\n                      (a.displayName?.en || a.id).localeCompare(\n                          b.displayName?.en || b.id,\n                          undefined,\n                          {\n                              numeric: true,\n                              sensitivity: 'base'\n                          }\n                      )\n                  )\n                  .reduce((p, c: IADTModel) => {\n                      p[c.id] = {\n                          name: c.displayName?.en || c.id,\n                          id: c.id,\n                          nodeData: c,\n                          nodeType,\n                          ...(nodeType === HierarchyNodeType.Parent && {\n                              children: {},\n                              isCollapsed: true\n                          }),\n                          isNewlyAdded: newlyAddedModelIds?.includes(c.id)\n                      } as IHierarchyNode;\n                      return p;\n                  }, {})\n            : {};\n    };\n\n    public static createNodesFromADTTwins = (\n        twins: Array<IADTTwin>,\n        modelNode: IHierarchyNode\n    ): Record<string, IHierarchyNode> | Record<string, never> => {\n        return twins\n            ? twins\n                  .sort((a, b) =>\n                      a.$dtId.localeCompare(b.$dtId, undefined, {\n                          numeric: true,\n                          sensitivity: 'base'\n                      })\n                  )\n                  .reduce((p, c: IADTTwin) => {\n                      p[c.$dtId] = {\n                          name: c.$dtId,\n                          id: c.$dtId,\n                          parentNode: modelNode,\n                          nodeData: c,\n                          nodeType: HierarchyNodeType.Child\n                      } as IHierarchyNode;\n                      return p;\n                  }, {})\n            : {};\n    };\n}\n"],"names":[],"mappings":"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"}