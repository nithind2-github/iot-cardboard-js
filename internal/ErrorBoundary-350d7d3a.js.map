{"version":3,"file":"ErrorBoundary-350d7d3a.js","sources":["../../src/Models/Context/ErrorBoundary.tsx"],"sourcesContent":["import React, {\n    ComponentType,\n    Dispatch,\n    ErrorInfo,\n    useContext,\n    useMemo,\n    useState\n} from 'react';\nimport BaseComponent from '../../Components/BaseComponent/BaseComponent';\nimport { ComponentError } from '../Classes/Errors';\nimport { ComponentErrorType, Theme } from '../Constants/Enums';\n\ninterface IErrorBoundaryContext {\n    error: Error;\n    errorInfo: ErrorInfo;\n    setIsHandled: Dispatch<boolean>;\n}\n\nconst ErrorBoundaryContext = React.createContext<IErrorBoundaryContext>({\n    error: null,\n    errorInfo: null,\n    setIsHandled: (_isHandled: boolean) => undefined\n});\n\n/** This hook exposes the error and errorInfo from the error boundary context\n * can be used to handle the error within children components, but make sure the buggy component\n * is going to be unmounted and when re-render handle error nicely: https://github.com/facebook/react/issues/12865\n *  */\nexport const useErrorBoundaryContext = (): [\n    Error,\n    ErrorInfo,\n    Dispatch<boolean>\n] => {\n    const context = useContext(ErrorBoundaryContext);\n    return [context.error, context.errorInfo, context.setIsHandled];\n};\n\nconst ErrorBoundaryWrapper: React.FC<{\n    theme?: Theme;\n    title?: string;\n    onErrorBoundary?: (error, errorInfo) => any;\n}> = ({ theme, title, onErrorBoundary, children }) => {\n    const [error, setError] = useState(null);\n    const [errorInfo, setErrorInfo] = useState(null);\n    const [isHandled, setIsHandled] = useState(false);\n    const errorContextValue = useMemo(\n        () => ({\n            error,\n            errorInfo,\n            setIsHandled\n        }),\n        [error, errorInfo]\n    );\n    return (\n        <ErrorBoundaryContext.Provider value={errorContextValue}>\n            <ErrorBoundary\n                onError={(error, errorInfo) => {\n                    setError(error);\n                    setErrorInfo(errorInfo);\n                    if (typeof onErrorBoundary === 'function') {\n                        onErrorBoundary(error, errorInfo);\n                    }\n                }}\n                isHandled={isHandled}\n                theme={theme}\n                cardTitle={title}\n            >\n                {children}\n            </ErrorBoundary>\n        </ErrorBoundaryContext.Provider>\n    );\n};\n\n// Apply this method to a component to wrap it within ErrorBoundary class component which keeps track of errors\nexport function withErrorBoundary<T>(Component: ComponentType<T>) {\n    return React.forwardRef<\n        unknown,\n        T & {\n            theme?: Theme;\n            title?: string;\n            onErrorBoundary?: (error, errorInfo) => any;\n        }\n    >((props, ref) => {\n        return (\n            <ErrorBoundaryWrapper\n                theme={props.theme}\n                title={props.title}\n                onErrorBoundary={props.onErrorBoundary}\n            >\n                <Component {...props} ref={ref ?? undefined} />\n            </ErrorBoundaryWrapper>\n        );\n    });\n}\ninterface ErrorBoundaryProps {\n    onError: (error: Error, errorInfo: ErrorInfo) => void;\n    isHandled?: boolean;\n    theme: Theme;\n    cardTitle?: string;\n}\n\ninterface ErrorBoundaryState {\n    error: Error;\n    hasError: boolean;\n}\n\n/** Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.\n * Error boundaries do not catch errors inside event handlers, use try/catch block for those: https://reactjs.org/docs/error-boundaries.html */\nclass ErrorBoundary extends React.Component<\n    ErrorBoundaryProps,\n    ErrorBoundaryState\n> {\n    constructor(props) {\n        super(props);\n        this.state = { error: null, hasError: false };\n    }\n\n    // Invoked after an error has been thrown by a descendant component, updating state to render fallback UI\n    static getDerivedStateFromError(error) {\n        return {\n            error: error,\n            hasError: true\n        };\n    }\n\n    // Call the callback function as side effect to expose error via context when an error is thrown\n    componentDidCatch(error, errorInfo) {\n        this.props.onError(error, errorInfo);\n    }\n\n    render() {\n        if (!this.props.isHandled && this.state.hasError) {\n            return (\n                <BaseComponent\n                    theme={this.props.theme}\n                    componentError={\n                        new ComponentError({\n                            isCatastrophic: true,\n                            type: ComponentErrorType.ErrorBoundary,\n                            name: this.state.error.name,\n                            message: this.state.error.message,\n                            rawError: new Error(this.state.error.stack)\n                        })\n                    }\n                ></BaseComponent>\n            );\n        }\n        return this.props.children;\n    }\n}\n"],"names":["React"],"mappings":"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"}