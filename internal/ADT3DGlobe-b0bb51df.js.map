{"version":3,"file":"ADT3DGlobe-b0bb51df.js","sources":["../../src/Components/ModelLabel/ModelLabel.styles.ts","../../src/Components/ModelLabel/ModelLabel.tsx","../../src/Components/ADT3DGlobe/ADT3DGlobe.tsx"],"sourcesContent":["import {\n    memoizeFunction,\n    mergeStyleSets,\n    IStyle,\n    Theme\n} from '@fluentui/react';\n\nexport const ModelLabelClassPrefix = 'cb-model-label';\n\nconst classNames = {\n    badge: `${ModelLabelClassPrefix}-badge`\n};\n\nexport const getStyles = memoizeFunction((theme: Theme) => {\n    return mergeStyleSets({\n        badge: [\n            classNames.badge,\n            {\n                borderRadius: 25,\n                background: theme.semanticColors.buttonBackground,\n                padding: '8px 16px',\n                border: `1px solid ${theme.palette.neutralLight}`,\n                color: theme.semanticColors.bodyText,\n                width: 'fit-content'\n            } as IStyle\n        ]\n    });\n});\n","import { ActionButton, useTheme } from '@fluentui/react';\nimport React, { useCallback } from 'react';\nimport { getStyles } from './ModelLabel.styles';\n\ninterface ModelLabelProps {\n    label: string;\n    id?: string;\n    onLabelClick?: (id: string) => void;\n}\n\nexport const ModelLabel: React.FC<ModelLabelProps> = ({\n    label,\n    id,\n    onLabelClick\n}) => {\n    const theme = useTheme();\n    const styles = getStyles(theme);\n\n    const onClick = useCallback(() => {\n        if (onLabelClick && id) {\n            onLabelClick(id);\n        }\n    }, [onLabelClick]);\n\n    return (\n        <ActionButton onClick={onClick} className={styles.badge}>\n            {label}\n        </ActionButton>\n    );\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport SceneView from '../3DV/SceneView';\nimport { useAdapter } from '../../Models/Hooks';\nimport './ADT3DGlobe.scss';\nimport { withErrorBoundary } from '../../Models/Context/ErrorBoundary';\nimport { CustomMeshItem, Marker } from '../../Models/Classes/SceneView.types';\nimport BaseComponent from '../BaseComponent/BaseComponent';\nimport { ModelLabel } from '../ModelLabel/ModelLabel';\nimport { Scene } from '@babylonjs/core';\nimport { IADT3DGlobeProps } from '../../Models/Constants/Interfaces';\nimport { GlobeTheme } from '../../Models/Constants';\nimport { hexToColor4 } from '../../Models/Services/Utils';\nimport { hsv2rgb, rgb2hex, rgb2hsv } from '@fluentui/react';\nimport { IScene } from '../../Models/Types/Generated/3DScenesConfiguration-v1.0.0';\n\nconst blues = ['#174576', '#276EB5']; // Sea and darkest color - rest are interpolated\nconst yellows = ['#8C7E25', '#C0A03D'];\nconst greys = ['#464241', '#6E6E6E']; // greys are calculated in code\n\nconst ADT3DGlobe: React.FC<IADT3DGlobeProps> = ({\n    adapter,\n    onSceneClick,\n    globeTheme = GlobeTheme.Blue\n}) => {\n    const [markers, setMarkers] = useState<Marker[]>([]);\n    const [coloredMeshes, setColoredMeshes] = useState<CustomMeshItem[]>([]);\n    const sceneRef = useRef(null);\n\n    const config = useAdapter({\n        adapterMethod: () => adapter.getScenesConfig(),\n        refetchDependencies: [adapter]\n    });\n\n    const onLabelClick = useCallback(\n        (id: string) => {\n            if (id) {\n                const scene = config.adapterResult.result?.data?.configuration?.scenes?.find(\n                    (scene) => scene?.id === id\n                );\n                if (scene) {\n                    onSceneClick(scene);\n                }\n            }\n        },\n        [config.adapterResult.result]\n    );\n\n    useEffect(() => {\n        const markers: Marker[] = [];\n        const scenes = config.adapterResult.result?.data?.configuration?.scenes;\n        if (scenes) {\n            for (const scene of scenes) {\n                if (scene.latitude && scene.longitude) {\n                    markers.push(createMarker(scene));\n                }\n            }\n\n            setMarkers(markers);\n        }\n    }, [config.adapterResult.result]);\n\n    const createMarker = (scene: IScene) => {\n        const id = 'cb-label-' + scene.id;\n        const marker: Marker = {\n            scene: scene,\n            id: id,\n            latitude: scene.latitude || 0,\n            longitude: scene.longitude || 0,\n            name: scene.displayName || 'Unknown',\n            allowGrouping: true,\n            UIElement: (\n                <ModelLabel\n                    id={scene.id}\n                    label={scene.displayName}\n                    onLabelClick={(id: string) => onLabelClick(id)}\n                />\n            )\n        };\n\n        return marker;\n    };\n\n    const updateTheme = (scene: Scene) => {\n        sceneRef.current = sceneRef.current || scene;\n        if (sceneRef.current) {\n            const mi: CustomMeshItem[] = [];\n            let colors = blues;\n            switch (globeTheme) {\n                case GlobeTheme.Blue:\n                    colors = blues;\n                    break;\n                case GlobeTheme.Yellow:\n                    colors = yellows;\n                    break;\n                case GlobeTheme.Grey:\n                    colors = greys;\n                    break;\n            }\n\n            let ct = -2;\n            const baseColor = hexToColor4(colors[1]);\n            const baseHSV = rgb2hsv(baseColor.r, baseColor.g, baseColor.b);\n            for (const mesh of sceneRef.current.meshes) {\n                if (mesh?.name?.startsWith('Region')) {\n                    ct += 2;\n                    if (ct >= 14) {\n                        ct = 1;\n                    }\n\n                    if (globeTheme === GlobeTheme.Grey) {\n                        const n = Math.floor((ct / 13) * 100 + 100);\n                        const color = rgb2hex(n, n, n);\n                        mi.push({ meshId: mesh.id, color: '#' + color });\n                    } else {\n                        const s = (ct / 13) * 62 + 12;\n                        const col = hsv2rgb(baseHSV.h, s, 100);\n                        const color = rgb2hex(col.r, col.g, col.b);\n                        mi.push({ meshId: mesh.id, color: '#' + color });\n                    }\n                } else if (mesh.name.startsWith('Sea')) {\n                    mi.push({ meshId: mesh.id, color: colors[0] });\n                }\n            }\n\n            setColoredMeshes(mi);\n        }\n    };\n\n    useEffect(() => {\n        updateTheme(null);\n    }, [globeTheme]);\n\n    return (\n        <BaseComponent\n            isLoading={config.isLoading && config.adapterResult.hasNoData()}\n            adapterResults={[config.adapterResult]}\n        >\n            <div className=\"cb-adt-3dglobe-wrapper\">\n                <SceneView\n                    modelUrl=\"Globe\"\n                    markers={markers}\n                    onSceneLoaded={updateTheme}\n                    coloredMeshItems={coloredMeshes}\n                />\n            </div>\n        </BaseComponent>\n    );\n};\n\nexport default withErrorBoundary(ADT3DGlobe);\n"],"names":["React"],"mappings":"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"}